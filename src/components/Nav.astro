---
import { siteName, buildNavi, staticLinks, type Page, type CalendarPage } from '../lib/api'
export interface Props {
	slug: string
}

const navi = await buildNavi()

const { slug } = Astro.props
---

<div class="mx-auto flex flex-wrap items-center py-3 md:max-w-4xl">
	<a class="site-name" href="/">
		{siteName}
	</a>

	<button
		type="button"
		class="menu-button"
		id="js-menu-button"
		aria-expanded="false"
		aria-controls="js-menu"
		aria-label="Navigation öffnen / schließen"
	>
		<svg
			aria-hidden="true"
			class="size-3 fill-current"
			viewBox="0 0 20 20"
			width="12"
			height="12"
			xmlns="http://www.w3.org/2000/svg"
		>
			<path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"></path>
		</svg>
	</button>

	<nav id="js-menu" class="menu">
		<ul class="items-center justify-end gap-x-3 lg:flex">
			{
				navi.map((item: Page | CalendarPage) => (
					<li class:list={[{ 'lg:hidden': item.isHome }]}>
						<a
							class="menu-item"
							href={`/${item.isHome ? '' : item.slug}`}
							aria-current={item.slug === slug ? 'page' : null}
						>
							{item.title}
						</a>
					</li>
				))
			}

			{
				staticLinks.map(item => (
					<li>
						<a class="menu-item" href={item.url}>
							{item.title}
						</a>
					</li>
				))
			}
		</ul>
	</nav>
</div>

<script>
	const setupMobileNav = () => {
		let clicked = false
		const button = document.querySelector<HTMLButtonElement>('#js-menu-button')
		button?.addEventListener('click', function () {
			if (clicked) return
			clicked = true
			button.setAttribute('aria-expanded', `${button.getAttribute('aria-expanded') === 'false'}`)
			requestAnimationFrame(function () {
				clicked = false
			})
		})
	}
	// https://docs.astro.build/en/guides/view-transitions/#astroafter-swap
	// runs on initial navigation
	setupMobileNav()
	// // runs on view transitions navigation
	// document.addEventListener('astro:after-swap', setupMobileNav);
</script>

<style is:global>
	.site-name {
		@apply ml-4 text-xl font-bold lg:ml-0;
		color: light-dark(var(--tmtGray-900), var(--tmtGray-400));
	}

	.menu-button {
		@apply w-9.5 h-7.5 ml-auto mr-4 flex appearance-none items-center justify-center rounded border lg:hidden;
		border-color: var(--tmtGray-600);
		color: var(--tmtGray-500);
	}

	@media (hover: hover) and (pointer: fine) {
		.menu-button:hover {
			@apply border-teal-500;
			color: light-dark(var(--tmtGray-900), var(--tmtGray-300));
		}
	}

	.menu {
		@apply z-20 mt-2 w-full grow lg:mt-0 lg:block lg:w-auto;
		display: none;
	}

	[aria-expanded='true'] + .menu {
		display: block;
	}

	.menu-item {
		@apply block px-4 py-2 lg:inline-block lg:px-2;
		color: light-dark(var(--tmtGray-650), var(--tmtGray-500));
	}

	.menu-item[aria-current='page'] {
		@apply font-bold dark:font-semibold;
		color: light-dark(var(--tmtGray-900), var(--tmtGray-300));
	}

	@media (hover: hover) and (pointer: fine) {
		.menu-item:hover {
			color: light-dark(var(--tmtGray-900), var(--tmtGray-300));
			text-decoration-line: underline;
		}
	}
</style>
